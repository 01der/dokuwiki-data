====== [hemmerling] Python 1/10 ======
Related pages:
  *[[fritzbox.html|FRITZ!Box]].
  *[[python02.html|Python 2/10]].
  *[[python03.html|Python 3/10 - Literature]].
  *[[python04.html|Python 4/10 - Pro & Contra]].
  *[[python05.html|Python 5/10]].
  *[[python06.html|Python 6/10 - Education in Python]].
  *[[python07.html|Python 7/10 - Organisations, Conferences, Barcamps & Events]].
  *[[python08.html|Python 8/10 - IDEs & GUI Designers]].
  *[[python09.html|Python 9/10 - Modules & Frameworks]].
  *[[python10.html|Python 10/10 - Web Application Frameworks]].
  *[[erp02.html|ERP 2/2 - The OpenSource ERP Systems "TinyERP" / "OpenERP" / "Odoo" and the Fork "Tryton"]].
  *[[uscripting.html|Scripting Programming Languages for Unix / Linux and Windows]].
===== Platform Runtimes =====
==== The original Platform Runtime ====
  *[[http://www.python.org/|Python.org "Python"]] for Windows, Linux, MacOSX.
    *Advice: For software development, do not install Python 2.x and 3.x on the same ( Windows ) computer. If you do anyhow, you won´t gain the expected smart user experience of the IDLE / Pythonwin development tools!
    *[[http://wiki.python.org/moin/UsefulModules|Python.org "UsefulModules"]] #.
    *[[http://pypi.python.org/pypi|PyPI - the Python Package Index]] - "The Python Package Index is a repository of software for the Python programming language". 
    *[[http://www.python.org/download/windows/|Python for Windows]].
    *[[http://www.python.org/ftp/|Python.org/ftp]] - Archive with all Python versions, including Windows installers.
    *[[http://docs.python.org/|Python v2 documentation]].
      *Python v2 documentation.
        *[[http://docs.python.org/download.html|Python v2 documentation - Downloads]].
        *[[http://docs.python.org/howto/webservers.html|Python v2 documentation "HOWTO Use Python in the web"]].
    *[[http://docs.python.org/py3k/|Python v3 documentation]].
      *[[http://docs.python.org/py3k/download.html|Python 3 documentation - Downloads]].
    *[[http://planet.python.org/|Python.org "Planet Python"]].
    *[[http://hg.python.org/sandbox/loewis|Python.org Mercurial Repositories]].
==== Alternative Javascript-based Runtimes ====
  *[[http://www.brython.info/|Brython]] - "A Python 3 implementation for client-side web programming".
  *The free online tool [[http://www.codeskulptor.org/|CodeSkulptor]]
    *"CodeSkulptor was built by [[http://www.cs.rice.edu/~rixner/|Scott Rixner]] and is based upon 
      -[[http://www.codemirror.net/|CodeMirror]].
      -[[http://www.skulpt.org/|Skulpt]], [[http://code.google.com/p/skulpt/|Google Code "Sculpt"]] by [[http://www.h4ck3r.net/|Scott Graham]].
    *[[http://www.rice.edu/|Rice University]].
    *[[http://en.wikipedia.org/wiki/Rice_University|EN.Wikipedia "Rice University"]], [[http://de.wikipedia.org/wiki/Rice_University|DE.Wikipedia "Rice University"]].
    *[[http://compsci.rice.edu/|Rice University, Department of Computer Science]].
      *[[http://news.rice.edu/2012/07/17/rice-to-partner-with-coursera-to-offer-free-online-courses-2/|RICE News "Rice to partner with Coursera to offer free online courses"]], 2012-07-17.
      *[[http://www.cs.rice.edu/~jwarren/|Joe Warren]].
      *[[http://www.cs.rice.edu/~rixner/|Scott Rixner]].
      *[[http://www.bandgap.cs.rice.edu/personal/adrice_swong/public|Stephen Wong]].
      *[[http://www.cs.rice.edu/~greiner/|John Greiner]].
    *[[http://www.codeskulptor.org/docs.html|CodeSkulptor Docs]].
    *[[http://www.codeskulptor.org/demos.html|CodeSkulptor Demos]].
    *[[http://www.codeskulptor.org/videos.html|CodeSkulptor Videos]].
      *[[http://www.youtube.com/user/codeskulptor|YouTube "Joe Warren"]].
      *[[http://www.youtube.com/watch?v=LjCzaz1aEBo|YouTube "Interactive Python with Scott Rixner & Joe Warren"]].
      *[[http://www.youtube.com/watch?v=mhaiCB8E8pY|YouTube "Using CodeSkulptor"]].
      *[[http://www.youtube.com/watch?v=K0BXw7VaONg|YouTube "SimpleGUI"]].
    *[[http://docs.python.org/release/2.6.8/|Python 2.6 Documentation]].
    *CodeSkulptor runs in Chrome 18+, Firefox 11+, and Safari 6+, but as of 2012-10, not on Microsoft MSIE.
  *[[http://www.pyjs.org/|pyjs]].
==== Alternative Platform Runtimes ====
=== Alternative Desktop Platform Runtimes ===
  *The free online service [[http://www.codepad.org/|Steven Hazel "Codepad"]] - "Online compiler/interpreter ( for C, C++, D, Haskell, Lua, OCaml, PHP, Perl, Plain Text, **Python**, Ruby, Scheme, Tcl ) and a simple collaboration tool. Paste your code below, and codepad will run it and give you a short URL you can use to share it in chat or email".
  *[[http://www.ironpython.net/|IronPython]], [[http://ironpython.codeplex.com/|CodePlex "IronPython"]], [[http://www.github.com/IronLanguages/main|Github "IronLanguages/main"]] - "An open-source implementation of the Python programming language which is tightly integrated with the .NET Framework", "Implementations of Python and Ruby programming languages for .NET Framework that are built on top of the Dynamic Language Runtime".
  *[[http://www.jython.org/|Jython: Python for the Java Platform]], [[http://jython.sourceforge.net/|Sourceforge "Jython"]], [[http://www.sourceforge.net/projects/jython/|Sourceforge "Jython"]].
  *The discontinued OpenSource LLVM project.
    *[[http://code.google.com/p/unladen-swallow/|Google Code "unladen-swallow. A faster implementation of Python"]].
    *[[http://en.wikipedia.org/wiki/Unladen_Swallow|EN.Wikipedia "Unladen Swallow"]].
  *Kivy - see section "Graphical Frameworks".
  *[[http://www.micropython.org/|Micro Python: Python for microcontrollers]].
    *"Micro Python is a lean and fast implementation of the Python 3 programming language that is optimised to run on a microcontroller".
    *"The Micro Python board (the pyboard) has been manufactured...".
    *[[http://www.github.com/micropython/|GitHub "micropython"]].
    *[[http://www.facebook.com/micropython|Facebook "Micro Python"]].
    *[[http://www.twitter.com/micropython|Twitter "Micro Python"]].
    *[[http://www.kickstarter.com/projects/214379695/micro-python-python-for-microcontrollers|Kickstarter "Damien George: Micro Python: Python for microcontrollers"]].
    *[[http://www.heise.de/hardware-hacks/meldung/Micro-Python-Ein-Python-fuer-Microcontroller-2217095.html|heise online "Micro Python: Ein Python für Microcontroller"]], 2014-06-06 - "Derzeit richtet sich die Sprache an Geräte mit 32-Bit-ARM-Prozessoren, die den Thumb-v2-Befehlssatz verwenden. Der Schöpfer der Sprache... hat mittlerweile ein Board mit STM32F405-Prozessor ( [[http://www.st.com/web/catalog/mmc/FM141/SC1169/SS1577/LN1035|STMicroeletronics "STM32F405/415"]] ) geschaffen".
  *[[http://www.portablepython.com/|Portable Python]].
    *[[http://www.portablepython.com/wiki/PortablePython2.7.3.1|Portable Python 2.7.3.1 Package - Supplied applications/libraries]].
    *[[http://www.portablepython.com/wiki/PortablePython3.2.1.1|Portable Python 3.2.1.1 Package - Supplied applications/libraries]].
  *[[http://psyco.sourceforge.net/|Sourceforge "Psyco"]], [[http://www.sourceforge.net/projects/psyco/|Sourceforge "Psyco"]] - "A Python extension module which can greatly speed up the execution of any Python code".
  *PyMite / python-on-a-chip ( p14p ).
    *[[http://code.google.com/p/python-on-a-chip/|Google Code "python-on-a-chip"]].
    *[[http://wiki.python.org/moin/PyMite|Python.org "PyMite"]].
    *No claimed support of the ATxmega CPU, yet !
  *[[http://www.pypy.org/|PyPy]] - "A fast, compliant alternative implementation of the Python language (2.7.2)".
    *[[http://en.wikipedia.org/wiki/PyPy|EN.Wikipedia "PyPy"]], [[http://de.wikipedia.org/wiki/PyPy|DE.Wikipedia "PyPy"]].
  *[[http://www.stackless.com/|Stackless Python]].
  *Stella.
    *[[http://de.mcbf.net/david/stella-compiling-a-subset-of-python/|David Mohr "Stella: Compiling a subset of Python"]] / [[http://digamma.cs.unm.edu/~dmohr/stella/|UNM, David Mohr "Stella"]].
    *[[http://digamma.cs.unm.edu/~dmohr/stella/ep14.html|David Mohr "Stella: Compiling a small subset of Python"]] - EuroPython 2014 lightening talk, 2014-07-25.
    *[[http://2014.splashcon.org/event/dsldi2014-stella-a-dsl-for-structuring-high-performance-simulations-in-python|SPLASH Portland 2014: "Stella: A DSL for structuring high-performance simulations in Python"]].
  *The commercial but affordable [[http://www.omz-software.com/pythonista/|Pythonista]] for the Apple iOS / iPhone / iPad  platform.
    *[[http://twitter.com/olemoritz|Twitter "Ole Zorn, @olemoritz"]].
    *[[http://omz-software.com/|omz:software]].
    *[[http://github.com/omz|GitHub "omz"]].
  *[[http://www.vpython.org/|VPython - 3D Programming for Ordinary Mortals]], [[http://www.github.com/vpython|Github "VPython"]] - "Is the Python programming language plus a 3D graphics module called 'Visual'".
    *Wiki [[http://vpython.wikidot.com/|VPython Wiki]].
    *[[http://en.wikipedia.org/wiki/VPython|EN.Wikipedia "VPython"]].
=== Alternative Mobile Platform Runtimes ===
  *[[http://pavan.eu5.org/|P D K Pavan Kumar, Eagles Software Solutions]].
    *[[http://play.google.com/store/apps/details?id=eagle.pdk.inpython|Google Play "InPython"]].
  *[[http://www.ilabs.com/|iLABS Private Limited]].
    *The free [[http://play.google.com/store/apps/details?id=innovationlabs.python.com|Google Play "Python For Android"]].
  *Kivy - see section "Graphical Frameworks".
  *[[http://www.qpython.com/|QPython - Python on Android]], [[http://www.github.com/qpython-android|GitHub "QPython"]].
    *[[http://play.google.com/store/apps/details?id=com.hipipal.qpyplus|Google Play "QPython - Python for Android"]].
    *[[http://play.google.com/store/apps/details?id=com.hipipal.qpy3|Google Play "QPython - Python 3 for Android"]].
    *Community website [[http://www.qpython.org/|QPython.org]] - "QPython is a script engine which runs Python programs on android devices. It also can help developers develop android applications".
      *Wiki [[http://wiki.qpython.org/|QPython Wiki]].
    *[[http://www.twitter.com/qpython|Twitter "qpython, @qpython"]].
    *[[http://www.youtube.com/results?search_query=qpython|YouTube -Search for "qpython"]].
    *Blog [[http://onetimeblog.logdown.com/categories/android| one-time blog. less is more. more or less - Articles tagged with "android"]], [[http://onetimeblog.logdown.com/categories/python| one-time blog. less is more. more or less - Articles tagged with "python"]] - "QPython".
    *[[http://www.stackoverflow.com/questions/tagged/qpython|StackOverflow - Tagged Questions "qpython"]].
      *[[http://stackoverflow.com/questions/28001100/qpython-or-kivy-for-android-programming-with-python-producing-installable-apk|StackOverflow "QPython or Kivy for Android programming with Python - producing installable apk"]].
    *[[http://sukhbinder.wordpress.com/2013/10/25/game-with-qpython-on-android-phone/|SukhbinderSingh. A self-directed apprenticeship…… "Game with QPython on Android Phone"]].
    *[[http://www.planetminecraft.com/blog/how-to-make-apps-for-android-right-on-your-phone/|Planet Minecraft "How to make apps for android right on your phone!"]] - "QPython".
    *[[http://blog.davidvassallo.me/2014/02/16/nugget-post-running-kivy-sl4as-python-for-android-together-using-qpython/|
David Vassallo's Blog "Nugget Post : Running Kivy + SL4A’s Python for Android together using QPython"]].
  *"Python Console" by "Eli Revah".
    *[[http://appcrawlr.com/android/python-console|AppCrawlr "Python Console (android)"]].
    *[[http://android.freeapk1.com/python-consolenew-11-48323.html|FREEAPK1 "Eli Revah 'Python ConsoleNew 1.1'"]].
    *There no download at Google-Play.
  *SL4A & TaskBomb.
    *[[http://www.github.com/damonkohler/sl4a|GitHub "damonkohler/sl4a"]], [[http://code.google.com/p/android-scripting/|Google Code "android-scripting. Scripting Layer for Android brings scripting languages to Android"]], [[http://web.archive.org/web/*/http://code.google.com/p/android-scripting/|Archive.org "Google Code 'android-scripting. Scripting Layer for Android brings scripting languages to Android'"]].
      *Projects based on SL4A.
        *[[http://code.google.com/p/python-for-android/|Google Code "python-for-android, Py4A"]].
          *There no binary download, nor at Google-Play nor at third-party Android appstores?!
          *[[http://stackoverflow.com/questions/18478492/difference-between-kivy-and-py4a|Stack Overflow "Difference between Kivy and PY4A"]].
          *[[http://www.youtube.com/watch?v=RCBiw78SDb8|YouTube "Some Experiences with Python-For-Android -Py4A"]].
          *[[http://www.youtube.com/watch?v=gQ08tonAtiQ|YouTube "DDMS and Py4A (Python for Android)"]].
      *[[http://www.pythoncentral.io/series/python-sl4a-android-scripting-layer-tutorial/|Python Central "Python Android Scripting Layer (SL4A) Tutorial"]].
      *[[http://docs.google.com/document/d/1vifjT3mH-kT1MECj3UUNXAmloKJFXpFyGQAnMpBN7UM/preview|Lucas Jordan, Pieter Greyling "Building cool scripts, apps, and games for Android Smartphones Practical Android Projects"]].
      *[[http://www.openhub.net/p/android-scripting/rss_articles?page=70|Black Duck / OpenHub "Scripting Layer for Android"]].
      *[[http://en.wikipedia.org/wiki/Scripting_Layer_for_Android|EN.Wikipedia "Scripting Layer for Android"]] ( SL4A ).
    *[[http://www.androidideas.org/taskbomb/|TaskBomb. A powerful and explosive task scheduler for Android]].
      *The free [[http://play.google.com/store/apps/details?id=org.androidideas.taskbomb|Google Play "TaskBomb task scheduler"]].
    *Projects based on SL4A and TaskBomb.
      *The free [[http://play.google.com/store/apps/details?id=org.androidideas.scriptlauncher|Google Play "SL4A Script Launcher"]].
=== Resources ===
  *[[http://appcrawlr.com/android-apps/best-apps-python-code|AppCrawlr "10 Best Apps for Python Code (android)"]].
  *[[http://www.reddit.com/r/Python/comments/1le5xo/best_python_interpreter_for_android_tablet/|Reddit "Best Python interpreter for Android tablet?"]].
==== Distributions ====
=== OpenSource Distributions ===
  *Google Code "Python(x,y)".
    *[[http://code.google.com/p/pythonxy/|Google Code "pythonxy. Scientific-oriented Python Distribution based on Qt and Spyder"]] for Windows.
    *[[http://code.google.com/p/pythonxy-linux/|Google Code "pythonxy-linux. Scientific-oriented Python Distribution for GNU/Linux based on Qt and Eclipse"]] for Linux.
    *[[http://code.google.com/p/spyderlib/|spyderlib. Spyder is the Scientific PYthon Development EnviRonment]].
    *As of 2015-07, "Python(x,y)" is just shipped with Python 2.x.
    *[[http://ftp.ntua.gr/pub/devel/pythonxy/|FTP Archive "Python x,y"]] - Download of legacy versions.
    *[[https://code.google.com/p/pythonxy/wiki/AdditionalPlugins|Google Code "pythonxy" - "Additional Plugins"]] - "Plugins available on this page are not included in Python(x,y) distributions".
    *Installation:
      *On Windows, the installer creates and uses the directories "C:\Python27" and C:\MinGW32-xy", no matter what you select as installation directory.
      *During installation of the Python(x,y) tools "numpy" and "scipy", the warning "Target CPU does NOT handle SSE2" might be displayed, e.g. on computers with Athlon XP2800 CPU :-(.
      *The QT designer of Python(x,y) 2.6.0 crashes on a computer with Athlon XP2800 CPU?!
    *Bugs & repair tips:
      *[[http://code.google.com/p/pythonxy/issues/detail?id=686#makechanges|Google Code "pythonxy", issue "Issue 686: Both Context menu items remain after uninstall"]].
      *[[http://code.google.com/p/pythonxy/issues/detail?id=216|Google Code "pythonxy", issue "Issue 216: PyQt4 Qt Designer unable to find uic"]].
        *"You can generate code by using the pyuic4.bat file located under the PyQt4 install directory, on Win usually 'C:/Python##/Lib/site-packages/PyQt4'. 
        *Usage from the command line is: **pyuic4.bat inputfile.ui > output.py**.
=== Commercial & free Distributions ===
== The Tool ==
  *The Python distribution [[http://www.continuum.io/downloads|Continuum Analytics "Anaconda"]] with free and commercial licenses - "A free collection of powerful packages for Python that enables large-scale data management, analysis, and visualization for Business Intelligence, Scientific Analysis, Engineering, Machine Learning, and more".
    *[[http://docs.continuum.io/anaconda/|Continuum Analytics "Anaconda Docs"]].
      *[[http://docs.continuum.io/anaconda/pkg-docs.html|Continuum Analytics "Package Documentation"]], [[http://repo.continuum.io/archive/|Continuum Analytics Repo - Archive]].
    *[[http://www.continuum.io/blog/|Continuum Blog]].
      *[[http://www.continuum.io/blog/anaconda-python-3|Continuum Blog "Python 3 support in Anaconda"]] - "Did you know that Anaconda has been supporting Python 3 for more than half a year?" -> I was told so too on the conference "PyConDE 2013", in 2013-10 :-).
    *[[http://www.continuum.io/our-team|Continuum Analytics - Our Team. Technical Staff]].
      *With [[http://ilan.schnell-web.net/|Ilan Schnell]], [[http://continuum.io/author/ilan|Continuum Analytics "Ilan"]], [[http://www.linkedin.com/pub/ilan-schnell/5/9ba/869|LinkedIn "Ilan Schnell"]], [[http://plus.google.com/111480164393314519931/|Google + "Ilan Schnell"]], [[http://www.github.com/ilanschnell|GitHub "Ilan Schnell"]], speaker on the conference PyConDE 2013, an important former distribution builder of [[http://www.enthought.com/|Enthought Python Distribution]] is now responsible for buildering "Anaconda" :-).
    *[[http://www.facebook.com/ContinuumAnalytics|Facebook "Continuum Analytics"]].
    *[[http://www.linkedin.com/company/continuum-analytics-inc-|LinkedIn "Continuum Analytics, Inc."]].
    *[[http://plus.google.com/108011804375544975017/|Google+ "Continuum Analytics"]].
    *[[http://www.twitter.com/continuumio|Twitter "Continuum Analytics"]].
    *[[http://www.github.com/DamnWidget/anaconda|GitHub "DamnWidget/anaconda"]].
    *Use "c:\> conda install package_name" to install packages. 
      *Conda is fundamentally different from "easy_install" and "pip". Iit is more like the linux package managers ( apt or yum ) - more binary distributions of packages. Conda can't fix known installations problems like with "PyLint", but it can make it easier to install, since it will be more of a simple binary package - The actual work of installing has already been done.
    *Bugs & repair tips:
      *"PyLint" is not included in the distribution ( though the shipped IDE "Spyder" has a non-functional menu entry "Source / Run pylint code analysis" ) and can´t be installed by well-known automatic installation processes. An installation attempt by "easy_install pylint" is aborted due to syntax errors in downloaded Python files and other faults :-(.
      *Thanks to Ilan, since 2014-03-24, you may now use "c:\> conda install pylint" to install PyLint on Anaconda :-).
  *[[http://www.activestate.com/|ActiveState]].
    *The commercial [[http://www.activestate.com/activepython|ActiveState "ActivePython"]] for Windows, Linux, MacOSX.
    *The free [[http://www.activestate.com/activepython/downloads|ActiveState "ActivePython Community Edition"]]  for Windows, Linux, MacOSX.
    *[[http://docs.activestate.com/activepython/2.7/|ActiveState "ActivePython 2.7 User Guide"]].
    *[[http://docs.activestate.com/activepython/3.3/|ActiveState "ActivePython 3.3 User Guide"]].
== Resources ==
  *[[http://www.askubuntu.com/questions/505919/installing-anaconda-python-on-ubuntu|Ask Ubuntu "Installing Anaconda python on ubuntu"]]
    *Call a fresh bash from terminal, with anaconda shell sript as parameter: "$ bash Anaconda-2.x.x-Linux-x86[_64].sh".
    *The export of Anaconda to standard Python in the path is stored in "$home/.bashrc".
=== Just-commercial Distributions ===
  *[[http://www.enthought.com/|Enthought, Inc.]].
    *The discontinued just-commercial [[http://www.enthought.com/products/epd.php|Enthought, Inc. "Enthought Python Distribution"]] ( EPD ) and its just-commercial successor [[http://www.enthought.com/products/canopy/|Enthought, Inc. "Canopy"]].
=== Resources ===
  *[[http://wiki.python.org/moin/PythonDistributions|Python Wiki "Python Distributions"]].
==== The Raspberry Platform ====
=== Hardware ===
  *See [[arm.html|ARM Embedded Systems ( ARM7, ARM8, ARM9, ARM11, Cortex )]].
=== Python on Raspberry ===
  *[[http://www.raspberrycenter.de/|RaspberryCenter.de - Die Raspberry Pi Community]].
    *[[http://www.raspberrycenter.de/handbuch/raspberry-pi-handbuch|RaspberryCenter.de - Die Raspberry Pi Community "Raspberry Pi Handbuch"]].
      *[[http://www.raspberrycenter.de/handbuch/python-programmierung|RaspberryCenter.de - Die Raspberry Pi Community "Python Programmierung"]].
  *[[http://www.google.de/search?q=raspberry+pyhton|Google - Search for "raspberry python"]].
==== Python on MSDOS, Windows ====
=== The original Python ===
  *[[http://www.python.org/ftp/python/2.7.9/|Python 2.7.9]] ( [[http://docs.python.org/2.7/|Python 2.7.9 documentation]], [[http://docs.python.org/2.7/download.html|Python 2.7.9 documentation - Download]] ) and [[http://www.python.org/ftp/python/3.3.5/|Python 3.3.5]] ( [[http://docs.python.org/3.3/|Python 3.3.6 documentation]], [[http://docs.python.org/3.3/download.html|Python 3.3.6 documentation - Download]] ) are the latest binary editions for W2k.
    *The installation of Python 3.4 aborts with the error message "//There is a problem with this Windows Installer Package. A program required for this install to complete could not be run. Contact your support personnel or package vendor//".   
    *The installation of AciveState Python 3.4.1.0 succeeds, but the installed Python.exe is no valid Win32 application for W2k.
    *The Python 3 edition of "Anaconda" started with Python 3.4, so there was never a Python 3 edition based on Python 3.3.
    *The installer of Python 3.5 is no valid Win32 application for W2k.
  *[[http://www.python.org/ftp/python/2.5.4/|Python 2.5.4]] ist the latest edition for Win98SE and WinME. Python 2.6 aborts installation by the error message "//There is a problem with the Windows Installer package. A DLL required for the install to complete could not be run. Contact your support personel or package vendor//".
    *What's missing with PythonD 2.5.4 ?
      *[[http://docs.python.org/whatsnew/2.6.html|Python v2.7.3 documentation "What’s New in Python 2.6"]].
      *[[http://docs.python.org/whatsnew/2.7.html|Python v2.7.3 documentation "What’s New in Python 2.7"]].
  *[[http://www.python.org/ftp/python/2.0.1/|Python 2.01]] ist the latest edition for MS-DOS, MS-Windows 3.x.
=== Binary Packages for Windows ===
  *[[http://www.lfd.uci.edu/~gohlke/pythonlibs/|Christoph Gohlke, Laboratory for Fluorescence Dynamics, University of California, Irvine "Unofficial Windows Binaries for Python Extension Packages"]] - "32- and 64-bit Windows binaries of many scientific open-source extension packages for the official CPython distribution of the Python programming language".
=== Python for Metro ===
  *[[http://apps.microsoft.com/windows/en-us/app/python-3-for-metro/82f0c953-93d4-461c-893f-c298b0d919d2|Windows Store "Python 3 For Metro"]].
  *How to get the app within Windows 8 ? Go to "Store", search for "Python for Metro".
  *[[http://wiki.python.org/moin/MartinvonLoewis/|Python.org "Martin von Loewis"]].
    *[[http://wiki.python.org/moin/MartinvonLoewis/Python%203%20For%20Metro|Python.org "Martin von Loewis - Python 3 For Metro"]].
  *[[http://www.loewis.de/martin/|Martin von Löwis]], [[http://www.stackoverflow.com/users/33006/martin-v-lowis|Stack Overflow "Martin von Löwis"]], [[http://www.github.com/loewis|Gthub "Martin v. Löwis ( loewis )"]], [[http://hg.python.org/sandbox/loewis|Python.org Mercurial Repositories "sandbox/loewis"]].
  *[[http://www.pyvideo.org/speaker/768/martin-v-lowis|PyVideo "Martin v. Löwis"]] - Video "Metro-Programmierung mit Python".
=== Python for 386-DOS ===
  *[[http://www.caddit.net/pythond/|PythonD 2.4.2 Release 1.0]] - "A 32-bit, multi-threaded, networking- and OpenGL-enabled Python interpreter for DOS and Windows".
  *What's missing with PythonD 2.4.2 ?
      *[[http://docs.python.org/2/whatsnew/2.5.html|Python v2.7.3 documentation "What’s New in Python 2.5"]].
      *[[http://docs.python.org/whatsnew/2.6.html|Python v2.7.3 documentation "What’s New in Python 2.6"]].
      *[[http://docs.python.org/whatsnew/2.7.html|Python v2.7.3 documentation "What’s New in Python 2.7"]].
=== Resources ===
  *[[http://docs.python.org/release/2.6/using/windows.html#installing-python|Python v2.6 documentation "Using Python on Windows"]].
  *[[http://www.python.org/dev/peps/pep-0011/|Python.org "PEP 11 -- Removing support for little used platforms"]].
==== Application Execution in Taint Mode ====
  *Taint mode -> See [[perl.html|Perl 1/2]].
  *Juanjo Conti.
    *[[http://www.juanjoconti.com.ar/taint/|Juanjo Conti "Taint Mode"]].
    *[[http://svn.juanjoconti.com.ar/dyntaint/|Juanjo Conti SVN "dyntaint"]] - Download.
    *[[http://www.cse.chalmers.se/~russo/juanjo.htm|Juanjo Conti "A Taint Mode for Python via a Library"]] - Download.
    *Slides [[http://www.juanjoconti.com.ar/2010/07/06/talk-taint-mode-for-python-via-a-library-slides/|Juanjo Conti "Talk: Taint Mode for Python via a Library (slides)"]], 2010-07-06.
    *Slides [[http://www.juanjoconti.com.ar/2009/09/07/charla-taint-mode-en-python/|Juanjo Conti "Charla: Taint Mode en Python"]], 2009-09-07.
    *[[http://pythonsecurity.tumblr.com/post/857505579/taint-mode-for-python|Pythonsecurity "Taint Mode For Python"]].
  *[[http://www.github.com/felixgr/pytaint|GitHub "felixgr/pytaint"]] - "The goal of pytaint project is to provide a taint tracking mechanism for Python by modifying the CPython interpreter and adding a module with convenience functions. Taint tracking is a feature which allows to monitor the flow of untrusted data across the application and preventing from using it in sensitive parts without proper sanitization".
  *[[http://en.wikipedia.org/wiki/Taint_checking|EN.Wikipedia "Taint checking"]].
===== IDEs =====
==== Free and OpenSource IDEs & IDE Plugins & GUI Designers ====
  *See [[python09.html|Python 9/9 - IDEs & GUI Designers]].
===== Project Setup & Project Distribution =====
==== Project Setup Tools ====
  *[[http://ep2014.europython.eu/en/schedule/sessions/36/|Europython 2014 Talks, Session "How to Setup a new Python Project"]].
    *[[http://www.github.com/blue-yonder|GitHub "Blue Yonder GmbH"]].
      *[[http://www.github.com/blue-yonder/pyscaffold|GitHub "blue-yonder/pyscaffold"]] - "Python project generator with batteries included".
        *[[http://pyscaffold.readthedocs.org/|ReadTheDocs "PyScaffold"]].
          *"PyScaffold assumes that you have Git installed and set up on your PC, meaning at least your name and email configured".
          *On Windows, with Python 2.7, the setup installation aborts with<code>
File "c:\temp\easy_install-jy_ycl\sh-1.09\sh.py", line 34, in <module> 
ImportError: sh 1.09 is currently only supported on linux and osx. 
please install pbs 0.110 (http://pypi.python.org/pypi/pbs) for windows support.</code>
          *[[http://pypi.python.org/pypi/pbs|Python Package Index "pbs"]] - "Python subprocess wrapper. PBS has now become sh. PBS will no longer be supported".
          *[[http://pypi.python.org/pypi/sh|Python Package Index "sh"]] - "Python subprocess interface".
==== Project Distribution with "Python Distribution Utilities" ("Distutils"), "setup.py", "Easy Install"... ====
  *[[http://docs.python.org/2/distutils/|Python Documentation "Distributing Python Modules"]].
    *[[http://docs.python.org/2/distutils/setupscript.html|Python Documentation "Distributing Python Modules. 2. Writing the Setup Script"]].
    *[[http://docutils.sourceforge.net/|SourceForge "Docutils: Documentation Utilities. Written in Python, for General- and Special-Purpose Use"]], [[http://www.sourceforge.net/projects/docutils|SourceForge "Docutils"]].
      *[[http://docutils.sourceforge.net/rst.html|SourceForge "reStructuredText. Markup Syntax and Parser Component of Docutils"]].
    *[[http://www.stackoverflow.com/questions/4840182/setup-py-and-adding-file-to-bin|StackOverflow "setup.py and adding file to /bin/"]] - "setup(name='myproject',author='',author_email='',scripts=['bin/myscript.py'])".
    *[[http://www.python-forum.de/viewtopic.php?f=9&t=35006|Das deutsche Python-Forum "Feedback erwünscht zu 'meinem ersten GitHub Projekt' :-)"]].
  *[[http://docs.python-guide.org/en/latest/starting/install/win/|Python Guide "Installing Python on Windows"]].
    *Installers for installing EZ-Setup and Pip:
      *"ez_setup.py" -> [[http://www.bitbucket.org/pypa/setuptools/raw/bootstrap/|BitBucket "pypa/setuptools/raw/bootstrap"]].
      *"get-pip.py" -> [[http://www.github.com/pypa/pip/tree/develop/contrib|GitHub "pypa/pip/tree/develop/contrib"]], [[http://bootstrap.pypa.io/|bootstrap.pypa.io]].
  *[[http://www.diveintopython3.net/packaging.html|Mark Pilgrim "Dive into Python 3 - Chapter 16 Packaging Python Libraries"]].
  *[[http://bazaar.launchpad.net/~facundo/encuentro/trunk/view/head:/setup.py|Launchpad.net "~facundo/encuentro/trunk"]].
  *[[http://matthew-brett.github.io/pydagogue/installing_scripts.html|GitHub.io, Matthew Brett "Installing python scripts"]].
  *[[http://www.github.com/matthew-brett/myscripter|GitHub "matthew-brett/myscripter"]] - "A trivial repo for playing with python script installation on windows".
  *[[http://www.pythonhosted.org/setuptools/|PythonHosted "Setuptools documentation"]].
    *[[http://www.pythonhosted.org/setuptools/easy_install.html|PythonHosted "Setuptools / Easy Install"]].
==== Packaging / Testing / Release ====
  *[[http://pypi.python.org/pypi/devpi|Python Package Index "devpi"]]-
    *[[http://doc.devpi.net/|devpi]] - "PyPI server and packaging/testing/release tool".
      *[[http://www.devpi.net/|www.devpi.net]].
        *[[http://www.devpi.net/hpk/devpi12/devpi-server/1.2.3|hpk/devpi12/: devpi-server-1.2.3 metadata and description]].
        *[[http://www.devpi.net/root/pypi/+simple/|root/pypi: simple list (including inherited indices)]].
    *[[http://www.testrun.org/tox/|tox automation project]] - "A generic virtualenv management and test command line tool you can use for:
      *Checking your package installs correctly with different Python versions and interpreters
      *Running your tests in each of the environments, configuring your test tool of choice
      *Acting as a frontend to Continuous Integration servers, greatly reducing boilerplate and merging CI and shell-based testing.
==== Generation of executable Applications ====
  *The OpenSource [[http://cx-freeze.sourceforge.net/|Sourceforge "cx_Freeze"]], [[http://www.sourceforge.net/projects/cx-freeze|Sourceforge "cx_Freeze"]] - "A set of scripts and modules for freezing Python scripts into executables".
  *The OpenSource [[http://www.nuitka.net/|Nuitka]] - "Python compiler".
  *The OpenSource [[http://www.py2exe.org/|py2exe]], [[http://py2exe.sourceforge.net/|Sourceforge "py2exe"]], [[http://www.sourceforge.net/projects/py2exe/|Sourceforge "py2exe"]].
  *The OpenSource [[http://svn.pythonmac.org/py2app/py2app/trunk/doc/index.html|py2app - Create standalone Mac OS X applications with Python]].
  *The OpenSource [[http://code.google.com/p/shedskin/|Google Code "shedskin. An experimental (restricted) Python-to-C++ compiler"]].
==== Operating System Desktop Automation & Application Automation ====
  *The OpenSource [[http://code.google.com/p/swapy/|Google Code "swapy. Simple Windows Automation on Python"]] - "Swapy-ob is a tool for GUI Automation for Windows. Finally you will get native python code for pywinauto module".
    *[[http://pywinauto.github.io/|GitHub.io "Windows GUI Automation with Python"]], [[https://www.github.com/pywinauto|GitHub "pywinauto"]] - "Windows GUI Automation with Python (64-bit Py3 compatible)".
==== Obfuscation Tools ====
  *The commercial tool [[http://bitboost.com/|Chris Niswander, BitBoost Systems "Python Obfuscator
and Code Shrinker"]].
    *The free online demo [[http://www.pawsense.com/python.obfuscator-0002/|Chris Niswander "Python obfuscator online (as a web form)"]] - "It is based on a limited version of the larger-scale [[http://www.bitboost.com/|BitBoost Python obfuscator]], which obfuscates much more complicated programs or packages".
  *The OpenSource [[http://www.github.com/astrand/pyobfuscate|Github "astrand / pyobfuscate"]].
==== Resources ====
  *Stack Overflow.
    *[[http://www.stackoverflow.com/questions/576963/python-code-obfuscation|Stack Overflow "Python Code Obfuscation"]].
    *[[http://www.stackoverflow.com/questions/261638/how-do-i-protect-python-code|Stack Overflow "How do I protect python code?"]].
  *[[http://en.wikipedia.org/wiki/Obfuscation_%28software%29|EN.Wikipedia "Obfuscation (software)"]] - "It also limits the use of the Reflection application programming interface on the obfuscated code".
  *[[http://de.wikipedia.org/wiki/Obfuscator|DE.Wikipedia "Obfuscator"]].
===== Tools =====
==== Specification by Example Tools for Python ====
  *See [[specbyex.html|Specification by Example]].
==== Continuous Integration ( CI ) Tools for Python ====
  *See [[ci.html|Continuous Integration ( CI )]].
==== Development and Operations ( DevOps ) Tools for Python ====
  *See [[devops.html|Development and Operations ( DevOps )]].
==== Python Module Installers ====
=== Tools ===
  *The OpenSource [[http://pypi.python.org/pypi/setuptools|Python Package Index "setuptools 0.6c11. Download, build, install, upgrade, and uninstall Python packages -- easily!"]], [[http://www.bitbucket.org/pypa/setuptools|Bitbucket "setuptools"]] for Python 2.7.
    *After installation of the Setuptools for Windows, go to the Python script directory ( e.g. "C:\Python27\scripts" and execute the module "module" by loading COMMAND.COM and executing "easy_install.exe -U module".
  *The OpenSource [[http://packages.python.org/distribute/easy_install.html|Python.org "Easy Install"]].
  *The OpenSource [[http://www.pip-installer.org/|pip - A tool for installing and managing Python packages]], [[http://github.com/pypa/pip|Github "pypa/pip"]], [[http://pypi.python.org/pypi/pip|Python.Org, PyPI - the Python Package Index "pip"]].
    *You may install Pip by [[http://www.virtualenv.org/en/latest/|virtualenv]] - "A tool to create isolated Python environments".
      *From Windows COMMAND.COM commandline:
        *"virtualenv venv --distribute".
        *"pip install xxxx", where "xxxx" are Python packages.
=== Resources ===
  *[[http://www.stackoverflow.com/questions/21265616/python-easy-install-fails-with-ssl-certificate-error-for-all-packages|Stack Overflow "python easy_install fails with SSL certificate error for all packages"]].
  *[[http://www.stackoverflow.com/questions/16370583/pip-issue-installing-almost-any-library|Stack Overflow "pip issue installing almost any library"]] - "The easiest workaround is to downgrade pip to one that doesn't use SSL: easy_install pip==1.2.1. This loses you the security benefit of using SSL. The real solution is to use a Python distribution linked to a more recent SSL library".
  *Warning: Once, on Windows, the default DNS server was set to an inproper value ( i.e. not to the IP of the "default gateway" = the local DSL router ). Though it looked as if most network functions worked, by this, "easy_install" failed to install anything, with the error message ( taking the fictive package "test" as example, it does not matter if the package really exists ):
<code>
Searching for test
Reading https://pypi.python.org/simple/test/
easy_install : Download error on https://pypi.python.org/simple/test/: [Errno 11001] getaddrinfo failed -- Some 
packages may not be found!
Couldn't find index page for 'test' (maybe misspelled?)

Scanning index of all packages (this may take a while)
Reading https://pypi.python.org/simple/
Download error on https://pypi.python.org/simple/: [Errno 11001] getaddrinfo failed -- Some packages may not be found!

No local packages or download links found for test

error: Could not find suitable distribution for Requirement.parse('test')
</code>
  *[[http://www.stackoverflow.com/questions/22819379/windows-8-1-pythonx-y-2-7-6-0-python-easy-install-fails-with-ssl-certifica|Stack Overflow "Windows 8.1, Python(x,y) 2.7.6.0: 'python easy_install' fails with SSL certificate error"]], [[http://groups.google.com/forum/#!topic/pythonxy/TsNczuS414o|Google Groups "python(x,y)", thread "Python pypi download broken on Win8.1, how to fix ? ( typical error message: _ssl.c:507: error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed )"]] by Rolf Hemmerling.
==== Python Launchers ====
  *The free Python launcher [[http://bitbucket.org/vinay.sajip/pylauncher/|vinay.sajip "pylauncher" / "PEP 397"]].
    *[[http://blog-de.python.org/2011/08/ein-python-starter-fur-windows.html|Python Insider DE - Neuigkeiten und Informationen zur Python Kern-Entwicklung "Ein Python-Starter für Windows"]].
==== Interfacing ====
  *The OpenSource [[http://www.cython.org/|Cython - C-Extensions for Python]] - "A language that makes writing C extensions for the Python language as easy as Python itself. It is based on the well-known [[http://www.cosc.canterbury.ac.nz/greg.ewing/python/Pyrex/|Pyrex]], but supports more cutting edge functionality and optimizations".
    *[[http://en.wikipedia.org/wiki/Cython|EN.Wikipedia "Cython"]], [[http://de.wikipedia.org/wiki/Cython|DE.Wikipedia "Cython"]].
  *The OpenSource [[http://www.cosc.canterbury.ac.nz/greg.ewing/python/Pyrex/|Pyrex]] - "Lets you write code that mixes Python and C data types any way you want, and compiles it into a C extension for Python".
    *[[http://wiki.python.org/moin/PyrexOnWindows|Python Wiki "PyrexOnWindows"]] - "Step-by-step guide to install Pyrex on Windows and compile your first extension", using the MinGW GNU C/C++ compiler.
    *[[http://en.wikipedia.org/wiki/Pyrex_%28programming_language%29|EN.Wikipedia "Pyrex (programming language)"]].
  *[[http://docs.python.org/2/library/ctypes.html|The Python Standard Library "15.17. ctypes — A foreign function library for Python"]].
    *[[http://python.net/crew/theller/ctypes/|Starship... a Home for Pythonistas ( python.net ), Thomas Heller - "The ctypes package"]].
      *[[http://www.python.net/|Starship... a Home for Pythonistas ( python.net ), Thomas Heller - "ctypes tutorial"]].
    *[[http://en.wikipedia.org/wiki/Foreign_function_interface|EN.Wikipedia "Foreign function interface]].
    *[[http://en.wikipedia.org/wiki/Language_binding|EN.Wikipedia "Language binding"]].
  *The OpenSource [[http://www.swig.org/exec.html|SWIG]].
    *[[http://www.swig.org/Doc1.3/Python.html|SWIG "31 SWIG and Python"]] - "An interface compiler that connects programs written in C and C++ with scripting languages such as Perl, Python, Ruby, and Tcl. It works by taking the declarations found in C/C++ header files and using them to generate the wrapper code that scripting languages need to access the underlying C/C++ code".
    *[[http://en.wikipedia.org/wiki/SWIG|EN.Wikipedia "SWIG"]], [[http://de.wikipedia.org/wiki/SWIG|DE.Wikipedia "SWIG"]].
==== Python Code Obfuscation ====
=== Python's On-board Tools ===
  *[[http://docs.python.org/2/library/compileall.html|Python Documentation "The Python Standard Library / 31. Python Language Services / 31.11. compileall — Byte-compile Python libraries"]].
  *[[http://docs.python.org/2/faq/programming#is-it-possible-to-write-obfuscated-one-liners-in-python|Python Documentation "Programming FAQ" - "Is it possible to write obfuscated one-liners in Python?"]].
===== Python Frameworks, Toolkits & Applications =====
==== Web Servers & Web Frameworks ====
  *See [[python10.html|Python 10/10 - Web Application Frameworks]].
==== Modules ====
  *See [[python09.html|Python 9/10 - Modules & Frameworks]].
==== Big Python Applications  ====
=== Airflow ===
  *The OpenSource [[http://nerds.airbnb.com/airflow/|Airbnb "Airflow"]] - "Airflow is written in pythonesque Python from the ground up", "The web server is packaged with Airflow and is built on top of the Flask Python web framework".
    *[[http://www.airbnb.io/projects/|Airbnb Open Source Projects]].
      *[[http://www.airbnb.io/projects/airflow/|Airbnb Open Source Projects "Airflow"]] - "Use Airflow to author workflows as directed acyclic graphs (DAGs) of tasks".
        *[[http://www.github.com/airbnb/airflow|GitHub "airbnb/airflow"]].
=== OpenStack ===
  *OpenStack - "Open-source software cloud computing platform. It is primarily deployed as an infrastructure as a service (IaaS) solution".
    *The OpenSource [[http://www.openstack.org/|Open Stack]], written in Python.
    *[[http://www.openstack.org/|OpenStack - Open source software for building private and public clouds]].
    *[[http://www.ubuntu.com/cloud/private-cloud/openstack|Ubuntu "OpenStack with Ubuntu"]].
    *[[http://www.twitter.com/openstack/|Twitter "OpenStack"]].
    *[[http://en.wikipedia.org/wiki/OpenStack|EN.Wikipedia "OpenStack"]], [[http://de.wikipedia.org/wiki/OpenStack|DE.Wikipedia "OpenStack"]] - "Projects that control pools of processing, storage, and networking resources throughout a datacenter, all managed through a dashboard that gives administrators control while empowering its users to provision resources through a web interface".
    *May be used to design "Meter Data Management Systems" systems in the Cloud, for the smart metering industry :-).
    *IBM uses "OpenStack" for IT infrastructure management, e.g. with the product "IBM The Cloud Manager with Openstack" ( CMwO ).
      *[[http://www.ibm.com/support/knowledgecenter/SST55W_4.1.0/|IBM Knowledge Center "IBM Cloud Manager with OpenStack welcome page"]] - "IBM Cloud Manager with OpenStack V4.1.0 documentation".
      *There are 3 interfaces to OpenStack:
        -Chef based installer.
        -The OpenStack dashboard "Horizon" for system administrators.
        -"IBM Smart Cloud Entry Web Interface" for end users ( as simple to use as the interfaces by AWS and Azure ).
==== Big Applications built with Python Interface ====
=== Abaqus Unified FEA ===
  *[[http://www.3ds.com/products-services/simulia/portfolio/abaqus/|Dassault Systèmes "Abaqus Unified FEA"]].
  *[[http://usa.autodesk.com/adsk/servlet/index?siteID=123112&id=9469002|Autodesk Maya, Developer Center]] -"The fully integrated Maya Embedded Language (MEL) and Python scripting languages give you high-level access to every aspect of the software so you can create custom windows, reconfigure the user interface, and issue commands from an HTML page".
=== Blender ===
  *[[http://www.blender.org/|Blender]].
  *Blender 2.49b is the latest edition using Python 2.x.
    *[[https://download.blender.org/release/Blender2.49b/|Blender - Download of "Blender2.49b"]].
  *Blender 2.5 is using Python 3.x.
  *[[http://en.wikipedia.org/wiki/Blender_%28software%29|EN.Wikipedia "Blender (software)"]], [[http://de.wikipedia.org/wiki/Blender_%28Software%29|DE.Wikipedia "Blender (Software)"]].
=== OriginPro ===
  *[[http://www.originlab.com/|OriginLab "Origin", "OriginPro"]] - "Data Analysis and Graphing Software".
    *[[http://www.originlab.com/doc/LabTalk/guide/work-with-python|OriginLab "LabTalk Programming / Expand LabTalk Programming / LabTalk Scripting Guide / Expand LabTalk Scripting Guide "2.16 Working with Python"]].
  *[[http://en.wikipedia.org/wiki/Origin_%28software%29|EN.Wikipedia "Origin (software)"]], [[http://de.wikipedia.org/wiki/Origin_%28Software%29|DE.Wikipedia "Origin (Software)"]].
=== RabbitMQ ===
  *[[http://www.rabbitmq.com/|RabbitMQ]] for Java, Python,.. - "Messaging that works".
=== Sublime Text ===
== The Editor ==
  *The ShareWare editor "[[http://www.sublimetext.com/|Sublime Text]] 2" for Windows, Linux.
  *[[http://www.sublimetext.com/2|Sublime Text 2]] - "Sublime Text 2 may be downloaded and evaluated for free, however a license must be purchased for continued use. There is currently no enforced time limit for the evaluation".
    *[[http://www.sublimetext.com/docs/plugin-basics|Sublime Text "Plugin Basics"]].
  *The editor offers the "Code Completion" feature with choice suggestions :-).
  *The current [[http://sublime-text-unofficial-documentation.readthedocs.org/|ReadTheDocs "Sublime Text Unofficial Documentation"]].
  *The legacy deprecated [[http://sublimetext.info/docs/en/|Sublime Text "Sublime Text Help"]].
    *[[http://www.sublimetext.info/docs/en/extensibility/plugins.html|Sublime Text "Sublime Text Help / Extending Sublime Text / Plugins"]].
== Plugins ==
  *Sublime Text offers to write plugins in Python :-).
  *[[http://www.packagecontrol.io/|Package Control]] - "Install Now The Sublime Text package manager that makes it exceedingly simple to find, install and keep packages up-to-date".
  *[[http://kutu.github.io/PythonAnywhereEditor/|GitHub.io "Python Anywhere Editor. Edit your files from www.PythonAnywhere.com"]].
    *[[http://www.pythonanywhere.com/forums/topic/92/|PythonAnywhere Forums "Sublime Text 2 plugin for Python Anywhere"]].
  *[[http://www.github.com/JulianEberius/SublimeRope|GitHub "JulianEberius/SublimeRope"]] - "ST2 only: Adds Python completions and some IDE-like functions to Sublime Text 2, through the use of the Rope library".
    *[[http://www.sublimetext.com/forum/viewtopic.php?f=5&t=1866|Sublime Text Forum "Python Completion and GotoDefinition plugin using Rope"]].
== Plugin Development ==
  *[[http://www.macdrifter.com/2012/08/making-a-sublime-text-plugin-markdown-reference-viewer.html|Macdrifter "Making a Sublime Text Plugin: Markdown Reference Viewer"]].
  *[[http://www.metaltoad.com/blog/writing-simple-sublime-text-plugin|METAL TOAD "Writing a simple Sublime Text plugin"]].
  *[[http://www.slideshare.net/juishanliang/py-contw-2013-write-sublime-text-2-packages-with-python|SlideShare, Jenny Liang "[PyConTW 2013] Write Sublime Text 2 Packages with Python"]].
  *[[http://code.tutsplus.com/tutorials/how-to-create-a-sublime-text-2-plugin--net-22685|tuts+ "How to Create a Sublime Text 2 Plugin"]].
  *[[http://www.stackoverflow.com/questions/15180537/how-to-include-third-party-python-packages-in-sublime-text-2-plugins|StackOverflow "How to include third party Python packages in Sublime Text 2 plugins"]].
== Resources ==
  *[[http://www.dbader.org/blog/setting-up-sublime-text-for-python-development|dbader.org "Setting up Sublime Text for Python development"]].
  *[[https://medium.com/@echohack/sublime-text-2-python-development-environment-in-windows-guide-3c17f64e120d|David Echols "Sublime Text 2 Python Development Environment in Windows"]].
  *[[http://nipunbatra.wordpress.com/2014/01/30/plugins-for-python-development-in-sublime-text/|nipunbatra "Plugins for Python development in Sublime Text"]].
    *[[http://www.github.com/wistful/SublimeAutoPEP8|GitHub "wistful/SublimeAutoPEP8"]] - "Automatically formats Python code to conform to the PEP 8 style guide using autopep8 and pep8 modules".
    *[[http://sublimecodeintel.github.io/SublimeCodeIntel/|GitHub.io "SublimeCodeIntel"]], [[http://github.com
    */SublimeCodeIntel|GitHub "SublimeCodeIntel"]] - "Full-featured code intelligence and smart autocomplete engine".
    *[[http://www.github.com/wuub/SublimeREPL|GitHub "wuub/SublimeREPL"]] - "SublimeREPL - run an interpreter inside ST2 (Clojure, CoffeeScript, F#, Groovy, Haskell, Lua, MozRepl, NodeJS, Python, R, Ruby, Scala, shell or configure one yourself)".
  *[[http://outofmemoryblog.blogspot.de/2012/08/python-development-with-sublime-text-2.html|java.lang.OutOfMemoryError. My random development experiments "Python development with Sublime Text 2 tips and tricks"]].
  *[[http://www.sitepoint.com/10-essential-sublime-text-plugins-full-stack-developer/|Sitepoint "10 Essential Sublime Text Plugins for Full-Stack Developers"]].
  *[[http://en.wikipedia.org/wiki/Sublime_Text|EN.Wikipedia "Sublime Text"]], [[http://de.wikipedia.org/wiki/Sublime_Text|DE.Wikipedia "Sublime Text"]].
=== Virtual Box ===
  *[[http://www.virtualbox.org/|Virtual Box]].
=== winIDEA ===
  *[[http://www.isystem.com/|iSYSTEM AG für Informatiksysteme]].
    *Blog [[http://embedded.typepad.com/isystems-smpo/|iSYSTEM AG für Informatiksysteme "iSystem News and Technical Blog"]].
    *"Access winIDEA from a Python application": [[http://www.isystem.com/download/winidea-testidea-apis|iSYSTEM AG "SDKs - winIDEA"]] - There is an SDK, "isystem.connect SDK", both
      *For the current commercial edition of the Windows IDE "winIDEA".
      *And for the current free edition of the Windows "IDE winIDEA", e.g. "winIDEA Open 9.12.209" and "winIDEA Open 9.12.238".
  *The only option to download and install the free SDK for Python is at "Help / SDK / Download Python SDK" in the "winIDEA Open" application :-), by which the download of e.g. [[http://www.isystem.si/SWUpdates/SDK/iSYSTEM.Python.SDK.9_12_209.zip|iSYSTEM.Python.SDK.9_12_209.zip]], [[http://www.isystem.si/SWUpdates/SDK/iSYSTEM.Python.SDK.9_12_238.zip|iSYSTEM.Python.SDK.9_12_238.zip]] is started.
  *[[http://www.isystem.com/downloads/winIDEA/SDK/iSYSTEM.Python.SDK/documentation/isystem-connect-api/index.html|iSystem AG "isystem.connect: User's Guide"]] for the Python SDK.
    *[[http://www.isystem.com/downloads/winIDEA/SDK/iSYSTEM.Python.SDK/documentation/isystem-connect-api/py_examples_by_group.html|iSystem AG "isystem.connect: User's Guide": "Python Examples by Group"]].
  *According to iSYSTEM staff members in 2015-07, the Python SDK is the most requested SDK by the customers. 
    *Due to this success, it is expected that this SDK will be available with further commercial and also free editions :-).
    *I was told by experts, that the number of shipped examples with the SDKs differs. As the Python SDK is so successful, it is shipped with the highest amount of example scripts.
  *Advice: Develop your scripts with Python 3.
    *Python 2.7 is still supported, 
    *but the shipped examples were now converted to Python 3, lately. 
  *The IDE "winIDEA" is shipped with "daqIDEA" ( "Data AcQuisition IDEA" ), a tool for graphic representation of large data sets acquired by winIDEA. See "./daqIDEA/daqIDEA.docx".
==== Interfacing the Real World ====
  *[[http://home.comcast.net/~dplau/nxt_python/|Douglas P Lau "NXT_Python"]].
  *[[http://code.google.com/p/nxt-python/|Google Code "nxt-python. A pure-python driver/interface/wrapper for the Lego Mindstorms NXT robot"]], a successor of NXT_Python.
  *[[http://www.telit.com/support/programming-tools/python/how-it-works/|Telit Wireless Solutions "How it works"]] - "The Telit Easy Script extension is targeted toward applications usually handled by a microcontroller that manages I/O pins through the AT command interface. In order to eliminate this external controller and further simplify the programming of the sequence of operations, Telit modules supporting Easy Script offer: Python script interpreter engine".

===== Testing =====
==== Static Testing - Source Code Checker ====
  *See [[goodcoding.html|Good Coding ! - Software Coding, Coding Rules, Static Code Analysis]].
==== Dynamic Testing Tools ====
  *See [[testing.html|Testing]].
  *See [[unittest.html|Unit Test / Module Test]].
  *YAML - YAML Ain't Markup Language -> See [[testing.html|Testing]].
==== How-To-Do-Testing, Testing Instructions, Testing Training ====
  *Grig Gheorghiu.
    *[[http://agiletesting.blogspot.com/2005/01/python-unit-testing-part-1-unittest.html|Grig Gheorghiu, Agile Testing "Python unit testing part 1: the unittest module"]].
    *[[http://agiletesting.blogspot.com/2005/01/python-unit-testing-part-2-doctest.html|Grig Gheorghiu, Agile Testing "Python unit testing part 2: the doctest module"]].
    *[[http://agiletesting.blogspot.com/2005/01/python-unit-testing-part-3-pytest-tool.html|Grig Gheorghiu, Agile Testing "Python unit testing part 3: the py.test tool and library"]].
  *[[http://www.ibm.com/developerworks/aix/library/au-python_test/|IBM developerWorks "Python testing frameworks : Make your life easy with a Python testing framework"]] #.
    *"zope.testing", "py.test", "nose".
    *"**The testing revolution**: The py.test framework transformed the world of Python testing by accepting plain Python functions as tests instead of insisting that tests be packaged inside of larger and heavier-weight test classes. Since the nose framework supports the same idiom, these patterns are likely to become more and more popular".
  *[[http://www.simplistix.co.uk/presentations/testing04/|Chris Withers, Simplistix - Making things simpler... "Presentations"]].
    *"Python as a Testing Tool" ( PDF ).
===== Generation of executable Applications =====
  *The OpenSource [[http://cx-freeze.sourceforge.net/|Sourceforge "cx_Freeze"]], [[http://www.sourceforge.net/projects/cx-freeze|Sourceforge "cx_Freeze"]] - "A set of scripts and modules for freezing Python scripts into executables".
  *The OpenSource [[http://www.py2exe.org/|py2exe]], [[http://py2exe.sourceforge.net/|Sourceforge "py2exe"]], [[http://www.sourceforge.net/projects/py2exe/|Sourceforge "py2exe"]].
  *The OpenSource [[http://svn.pythonmac.org/py2app/py2app/trunk/doc/index.html|py2app - Create standalone Mac OS X applications with Python]].
===== Python Jobs, Trainings, Certifications, Projects =====
==== Commercial Certification for Python Skills =====
  *[[http://www.brainbench.com/|Brainbench, Inc.]] -> See [[brainbench.html|Brainbench Certification]].
==== Zope, Django ====
  *In the early 2000ths, the only job offers in Germany for Python developers were about building websites & web applications using using Zope. Many/most processed projects were based on Plone, the most successfull application built with Zope. As the years passed by, a kind of "Zope" ecosystem was created, generating successful "Plone service providers".
  *Since late 2000th / early 2010th, it might be that a similar ecosystem for "Django" is under construction.
==== Open List for ( unpaid,..) Projects ====
  *[[http://wiki.python-forum.de/Projektb%C3%B6rse|Python-Forum "pythonwiki - Projektbörse"]].
==== The Meaning of Python for Testing of ( Automotive ) Industry Applications ====
  *Job offer analysis ?
  *Case Studies ?
  *Popular Frameworks ?
==== Companies which are Python Specialists ====
  *[[http://www.veit-schiele.de/|Veit Schiele Communications GmbH]].
  *[[http://www.zetwork.com/|zetwork GmbH]].
  *[[http://www.zopyx.de/|ZOPYX/Andreas Jung]].
    *[[http://www.zopyx.de/aktuelles/news|ZOPYX/Andreas Jung - News]].
===== Python Hosting =====
==== Heroku ====
  *[[http://www.heroku.com/|Heroku]] - "Cloud Application Platform". "Write apps in your language – we support Ruby, Node.js, Clojure, Java, Python and Scala" -> See [[saas.html|Software As A Service ( SAAS )]].
==== PythonAnywhere ====
  *Commercial and free Python online services [[http://www.pythonanywhere.com/|PythonAnywhere]] - "A Python development and hosting environment that displays in your web browser and runs on our servers. They're already set up with everything you need. It's easy to use, fast, and powerful. There's even a useful free plan".
    *Blog [[http://blog.pythonanywhere.com/|PythonAnywhere Blog "PythonAnywhere News"]].
    *[[http://www.facebook.com/PythonAnywhere|Facebook "PythonAnywhere"]].
    *[[http://www.youtube.com/results?search_query=pythonanywhere|YouTube - Search for "pythonanywhere"]].
    *[[http://twitter.com/pythonanywhere/|Twitter "PythonAnywhere"]].
    *Components:
      *[[http://www.pythonanywhere.com/batteries_included/|PythonAnywhere "Batteries Included... The following modules are available as standard on PythonAnywhere. Just import them, they're ready to go!"]] #.
      *Inside the Web tab you can configure a [[http://en.wikipedia.org/wiki/Web_Server_Gateway_Interface|WSGI]] web app which will be served at [[http://hemmerling.pythonanywhere.com/|hemmerling.pythonanywhere.com]]. Try using one of the built in web frameworks like [[http://www.djangoproject.com/|django]] or [[http://www.web2py.com/|web2py]] to get started quickly. 
      *[[http://www.pypy.org/|PyPy]].
      *[[http://www.ipython.org/|IPython]].
==== Some other Service Providers ====
=== Europe ===
  *[[http://p5028688.profiseller.de/|1&1]].
    *[[http://hilfe-center.1und1.de/homepage-entwickeln-c82634/python-c82688|1&1 Hilfe Center - Python]].
    *[[http://faq.1and1.com/scripting_languages_supported/cgis/3.html|1&1 Webhosting FAQ | What Python modules are installed on the shared hosting servers]].
    *[[http://martins-kabuff.de/blog/?id=47ee1e40155e5|Martin Prochnow "1&1 - Beworben, nochmal zugesichert aber nicht geliefert"]] - "Python steht erst ab dem Tarif 1&1 Business zur Verfügung" ( 2008 ).
  *[[http://www.aldryn.com/|Divio Aldryn Ltd. "Aldryn"]] - "The easiest way to build and manage your django CMS projects Get your first website in minutes!".
    *[[http://control.aldryn.com/demo/get-new/|Divio Aldryn Ltd. "Aldryn demo website"]].
  *[[http://www.df.eu/de/|domainfactory GmbH]].
    *[[http://www.df.eu/de/service/df-faq/webhosting/skriptsprachen/python/|domainfactory GmbH "Pyton"]] -> "Python Version 2.6.6".
  *[[http://www.hetzner.de/|Hetzner Online AG]].
      *[[http://www.hetzner.de/hosting/produktmatrix/webhosting-produktmatrix|Hetzner Online AG "Produktmatrix Webhosting"]] -> "Perl, Python".
  *[[http://www.hostsharing.net/|Hostsharing e.G.]].
    *[[http://www.hostsharing.net/produkte|Hostsharing e.G. "Produkte"]].
      *[[http://www.hostsharing.net/produkte/web-pakete|Hostsharing e.G. "Web-Pakete"]] - "Webpakete eignen sich hervorragend für den Einsatz von Content-Management-Systemen und Frameworks für große (z.B. Plone, Zope, Typo3) wie auch für kleinere oder mittlere Anwendungen (Django, Wordpress etc.). Ebenfalls sind eine Vielzahl von Programmiersprachen einsetzbar, wie Lua, C++,C, Python, tcl, php und andere".
    *[[http://www.veit-schiele.de/profil/netzwerk/hostsharing|Veit Schiele Communications GmbH "Hostsharing e.G."]] - "Darüberhinaus betreue ich bei der Hostsharing e.G. die Python- und Zope-Installationen und Sie erhalten daher von mir Support zum Einrichten Ihrer Zope-Instanz und Konfigurieren Ihrer Plone-Site aus erster Hand".
  *[[http://www.flyingcircus.io/|Flying Circus — Python hosting DevOps style]] -> Python 2.5-3.2.
  *[[http://www.hosteurope.de/|Host Europe GmbH]].
    *[[http://faq.hosteurope.de/index.php?cpid=10971|Host Europe GmbH - FAQ "Skripte (cgi, perl, php, Webanwendungen)"]].
      *[[http://faq.hosteurope.de/index.php?cpid=11005|Host Europe GmbH - FAQ "Ruby und Python"]] - "Aktuell bieten wir Python in den Versionen 2.5.5 und 2.6.6 an".
      *[[http://faq.hosteurope.de/index.php?cpid=14061|Host Europe GmbH - FAQ "WebPack Pro"]] - "Aktuell bieten wir Python in einer version an: /usr/bin/python --> Version 2.5".
      *[[http://faq.hosteurope.de/index.php?cpid=18507|Host Europe GmbH - FAQ "Welche Erweiterungen stehen für PHP, Perl, Python und Ruby zur Verfügung?"]].
  *[[http://www.netclusive.de/|netclusive GmbH]].
    *[[http://www.netclusive.de/?go=hostingp|netclusive GmbH "Webhosting für Einsteiger und Fortgeschrittene"]] - "User 3.0 -> CGI-Unterstützung (Perl, Python)".
  *[[http://www.strato-faq.de/|STRATO AG]].
    *[[http://www.strato-faq.de/artikel.html?id=555|STRATO AG - STRATO FAQ "Wie lauten die Pfade in Ihrem System?"]] - "Der Pfad zu Python /usr/bin/python".
    *[[http://www.strato-faq.de/artikel.html?id=555|STRATO AG - STRATO FAQ "So installieren Sie eigene CGIs auf unserem Server"]].
      *"Perl".
      *"Python (ab Premium/PowerPlus Paket)"
  *[[http://www.webfaction.com/services/hosting?affiliate=hemmerling|Swarma Limited - WebFaction]].
  *[[http://www.w3w.de/|3W-SERVICE Internet Solutions - W3W.de - hosting for professionals]] - "Python 2.5.1 (integriertes Servermodul)".
=== Worldwide / USA ===
  *[[http://dreamhost.com/web-hosting/|Dreamhost]].
    *Wiki [[http://wiki.dreamhost.com/Python|Dreamhost Wiki "Python"]].
=== Resources ===
  *[[http://udhayprakash.blogspot.in/2015/07/online-idesinterpreters-for-python.html|Udhay Prakash Blog. About Wireless Networks,Python, Matlab tutorials and ns-2 tutorials "Online IDEs/Interpreters for python programming"]].
==== Forums, Newsgroups ====
  *[[http://www.facebook.com/LianjaInc|Facebook "Lianja"]].
    *[[http://www.lianja.com/community/|Lianja Developer Community]].
  *[[http://www.pythonanywhere.com/forums/|PythonAnywhere Forums]].
  *WebFaction.
    *New forum [[http://community.webfaction.com/|WebFaction Community]].
      *Question [[http://community.webfaction.com/questions/11426/which-python-version-is-supplied-with-the-webhosting|WebFaction Community "Which Python version is supplied with the webhosting ?"]] - "We provide versions 2.4 - 2.7 and 3.0 - 3.1 You invoke the version by the binary name, e.g. python2.7".
    *Old forum [[http://forum.webfaction.com/|WebFaction Forum]].
===== Appropriate OpenDirectory Directory Pages =====
  *[[http://www.dmoz.org/Computers/Programming/Languages/Python/|OpenDirectory "Top: Computers: Programming: Languages: Python]].
  *[[http://www.dmoz.org/World/Deutsch/Computer/Programmieren/Sprachen/Python/|OpenDirectory "Top: World: Deutsch: Computer: Programmieren: Sprachen: Python"]].
 {{tag>"Unix script language" "script language" Python}}
<footnote_navi_en>
