====== [hemmerling] Microsoft .NET Framework 2/3 ======
Related pages:
  *[[metro.html|Flat Design]].
  *[[gameengine.html|Game Engines]].
  *[[dotnet.html|Microsoft .NET Framework 1/3]].
  *[[dotnet03.html|Microsoft .NET Framework 3/3]].
  *[[windows.html|Microsoft Windows]].
  *[[sdevtools.html|Software Development Tools]].
  *[[windeveloper.html|Software Development for Windows]].
  *[[windowsphone.html|Windows Phone]].
===== .NET IDEs & Compilers =====
  *Once there were free development tools by Borland / Inprise Corporation / Borland / CodeGear / Embarcadero Technologies.
    -"Borland Turbo C# Explorer".
    -"C#Builder Personal Edition".
  *The free [[http://www.mono-project.com/CSharp_Compiler|mono CSharp Compiler]].
===== .NET Development Tools =====
==== .NET Decompiler ====
  *The free [[http://msdn.microsoft.com/de-de/library/f7dy01k1%28v=vs.80%29.aspx|Microsoft MSDN "MSIL Disassembler-Tool (Ildasm.exe)"]] for .NET 2.0.
  *The OpenSource [[http://wiki.sharpdevelop.net/ilspy.ashx|SharpDevelop "ILSpy"]], [[http://sourceforge.net/projects/sharpdevelop/files/ILSpy/|Sourceforge "ILSpy"]] for .NET 4.0.
  *The comercial [[http://www.red-gate.com/products/reflector/|redgate ".NET Reflector"]] for WinXp with .NET 3.5.
    *".NET Reflector v6.8" for Windows with .NET 2.0, Microsoft Data Access Components (MDAC) 2.8 is the latest free edition. Redgate promises that it does not expire, but you must register to get a free license key. This serial key can be used to activate up to 5 machines. 
      *[[http://forums.reflector.net/questions/26/how-do-i-activatedeactivate-the-serial-number|.NET Reflector "Forum / Questions" - "How do I activate/deactivate the serial number?"]].
      *[[http://www.red-gate.com/messageboard/viewtopic.php?t=13330|Red Gate Forums "Where can I download the free 6.8 version of .NET Reflector?"]].
      *You can deactivate and re-activate a machine for ".NET Reflector v6.8".
        -On the .NET Reflector menu, click Deactivate Serial Number. The Deactivate Serial Numbers dialog box is displayed.
        -Select the serial number and associated products.
        -Click Deactivate.
        -The serial number can now be used for .NET Reflector on a different machine. 
    *Earlier free versions of ".NET Reflector" like ".NET Reflector 6.5" are expired. They just asks to update to "NET Reflector v6.8". But as there is no legal download offer for ".NET Reflector 6.8", you need first to install such an expired version for upgrade.
    *Originally, the product was named [[http://wayback.archive.org/web/*/http://www.aisto.com/Roeder/DotNet/|Lutz Roeder's Reflector for .Net]] ( - 2008-08-19 ).
    *With ".NET Reflector v7", there is no free edition anymore.
==== FxCop - Free Static code Analysis Tool for .NET Binaries ====
== FxCop - The Tool ==
  *FxCop 1.35.
    *[[http://code.msdn.microsoft.com/codeanalysis/Release/ProjectReleases.aspx?ReleaseId=553|MSDN "Microsoft FxCop 1.35"]] for W2k with .NET 2.0 - "FxCop includes both GUI and command line versions of the tool and supports analyzing .NET 1.x, .NET 2.0 and .NET 3.x components".
  *FxCop 1.36.
    *[[http://www.microsoft.com/downloads/en/details.aspx?FamilyID=71DEB800-C591-4F97-A900-BEA146E4FAE1|Microsoft Download Center "Microsoft Windows SDK for Windows 7 and .NET Framework 3.5 SP1 (ISO)"]].
  *FxCop 10.
    *[[http://www.microsoft.com/downloads/en/details.aspx?FamilyID=35AEDA01-421D-4BA5-B44B-543DC8C33A20|Microsoft Download Center "Microsoft Windows SDK for Windows 7 and .NET Framework 4 (ISO)"]].
== FxCop - Resources ==
  *[[http://msdn.microsoft.com/en-us/library/bb429476%28v=vs.80%29.aspx|Microsoft MSDN Libary "FxCop"]].
  *Blog [[http://blogs.msdn.com/b/codeanalysis/|Microsoft MSDN "Code Analysis Team Blog"]].
    *[[http://blogs.msdn.com/b/codeanalysis/archive/2006/03/11/549611.aspx|Microsoft MSDN, Code Analysis Team Blog "David Kean: How do I integrate custom rules with Visual Studio?"]].
    *[[http://blogs.msdn.com/b/codeanalysis/archive/2010/07/26/fxcop-10-0-is-available.aspx|Microsoft MSDN, Code Analysis Team Blog "FxCop 10.0 is available"]].
  *[[http://msdn.microsoft.com/en-us/netframework/aa497255.aspx|.NET Framework Developer Center  "Designing .NET Class Libraries: FxCop In Depth"]].
  *[[http://en.wikipedia.org/wiki/FxCop|EN.Wikipedia "FxCop"]].
==== NCover ====
  *The commercial [[http://www.ncover.com/|NCover]] - Code coverage tool. "A tool to tell you how much of your program is covered by your automatic tests. Instruments source code prior to running unit tests to establish test coverage.* Nant integration* For use with continuous integration builds".
  *The latest free legacy OpenSource edition [[http://www.ncover.com/download/community|NCover Community]], [[http://ncover.sourceforge.net/|Sourceforge "NCover"]], [[http://www.sourceforge.net/projects/ncover/|Sourceforge "NCover"]].
  *Blog [[http://www.ncover.com/blog/|NCover Blog]].
==== Some other .NET Tools ====
  *[[http://www.codeplex.com/wikipage?ProjectName=MSBee|CodePlex "MSBuild Extras - Toolkit for .NET 1.1 'MSBee'"]] for Microsoft .NET 1.1.
  *The commercial profiler [[http://www.jetbrains.com/profiler/|JetBrains "dotTrace"]] - 10 days trial edition.
  *The commercial [[http://www.jetbrains.com/resharper/|JetBrains "R# ReSharper - The Most Intelligent Extension for Visual Studio"]].
  *The free [[http://www.oracle.com/technetwork/developer-tools/visual-studio/|Oracle Developer Tools for Visual Studio .NET]].
===== .NET Application and .NET Components =====
==== OpenSource ====
  *AntMe! -> See [[codingdojo.html|Coding Dojo / Coding Kata / Randori / Code Retreat / Object Calisthenics / H@ckathons / Hackfests / Codefests / Programming Marathons / Elephant Carpaccio Exercise - Group-Awareness, Self-Awareness, Self-Training in Software Development as well as Developer Contests & Developer Challenges]].
  *[[http://www.subsonicproject.com/|SubSonic]], [[http://subsonic.codeplex.com/|CodePlex "Subsonic for Windows Phone 7"]] - "A free, web-based media streamer, providing ubiquitous access to your music".
==== Commercial ====
  *[[http://www.componentsource.com/|ComponentSource]] - "Offers a unique global service, used by over 1,000,000 software developers worldwide".
    *[[http://www.componentsource.com/services/publisher/program-introduction.html|ComponentSource "Introduction - Sell Dev Tool Software Internationally With Us!"]].
===== .NET Frameworks =====
==== "Inversion of control" Frameworks ====
=== Frameworks ===
  *"Inversion of control" -> See [[systemdesign.html|System Design]].
  *[[http://www.autofac.org/|Autofac]], [[http://www.github.com/autofac|GitHub "autofac"]], [[http://code.google.com/p/autofac/|Google Code "autofac. An addictive .NET IoC container"]].
    *[[http://www.c-sharpcorner.com/UploadFile/dacca2/implement-dependency-injection-using-autofac-ioc-container/|C# Corner "Implement Dependency Injection Using Autofac IoC Container"]].
    *The Code Project.
      *[[http://www.codeproject.com/Articles/690391/Dependency-Injection-Pattern-with-Autofac|The Code Project "Dependency Injection Pattern with Autofac"]].
      *[[http://www.codeproject.com/Articles/25380/Dependency-Injection-with-Autofac|The Code Project "Dependency Injection with Autofac"]].
  *[[http://www.caliburnmicro.com/|Caliburn.Micro]], [[http://www.github.com/Caliburn-Micro|GitHub "Caliburn-Micro"]], [[http://caliburnmicro.codeplex.com/|CodePlex "Caliburn.Micro"]] #.
    *Caliburn.Micro is inversive: With Caliburn.Micro applications, self-written classes depend on the injection framework.
    *Caliburn.Micro is an MVVM framework.
    *[[http://caliburn.codeplex.com/|CodePlex "Caliburn"]] is the legacy predecessor.
  *[[http://mef.codeplex.com/|CodePlex "Managed Extensibility Framework - The MEF Community Site]] for .NET 4, .NET 4.5 #.
    *MEF is inversive: With MEF applications, self-written classes depend on the injection framework.
    *[[http://blogs.msdn.com/b/brada/archive/2009/07/20/simple-example-using-managed-extensibility-framework-in-silverlight.aspx|Brad Abrams, Design Guidelines, Managed code and the .NET Framework "Design Guidelines, Managed code and the .NET Framework"]].
    *[[http://stefanhenneken.wordpress.com/category/managed-extensibility-framework/|Stefan Henneken "Archive for the ‘Managed Extensibility Framework’ Category"]] - Valuable 11 part article about MEF.
    *[[http://msdn.microsoft.com/en-us/library/dd460648(v=vs.110).aspx|Microsoft Developer Network "Managed Extensibility Framework (MEF)"]] (English), [[http://msdn.microsoft.com/de-de/library/dd460648%28v=vs.110%29.aspx|Microsoft Developer Network "Managed Extensibility Framework (MEF)"]] (German).
    *[[http://www.superdevelopment.com/2014/01/13/getting-started-with-the-managed-extensibility-framework/|Super Development. Created by the consulting team at ILM "Getting Started with the Managed Extensibility Framework"]].
    *[[http://www.codeproject.com/Articles/188054/An-Introduction-to-Managed-Extensibility-Framework|The Code Project "An Introduction to Managed Extensibility Framework (MEF) - Part I"]], [[http://www.codeproject.com/Articles/37579/Managed-Extensibility-Framework-Part|The Code Project "An Introduction to Managed Extensibility Framework (MEF) - Part II"]].
    *[[http://en.wikipedia.org/wiki/Managed_Extensibility_Framework|EN.Wikipedia "Managed Extensibility Framework"]].
  *[[http://www.lightcore.ch/|LightCore]], [[http://www.peterbucher.ch/arbeiten/lightcore.aspx|Peter Bucher "LightCore"]] - "A lightweight dependency injection container which can be used as a service locator, too".
    *[[http://www.aspnetzone.de/blogs/peterbucher/archive/2010/12/05/Teil-1-_2D00_-Umkehrung-der-Kontrolle-erklaert-oder_5F00_Von-der-Fabrikmethode-zum-DI_5F00_Container.aspx|Peter Bucher. Auf den Spuren von .NET "Teil 1: Umkehrung der Kontrolle erklärt, oder: Von der Fabrikmethode zum DI-Container"]].
    *[[http://www.aspnetzone.de/blogs/peterbucher/archive/2012/11/13/teil-2-umkehrung-der-kontrolle-erk-rt-oder-von-der-fabrikmethode-zum-di-container.aspx|Peter Bucher. Auf den Spuren von .NET "Teil 2: Umkehrung der Kontrolle erkärt, oder: Von der Fabrikmethode zum DI-Container"]].
  *[[http://www.ninject.org/|Ninject - Open source dependency injector for .NET]], [[http://www.github.com/ninject|GitHub "Ninject"]] for .NET 2.0, .NET 3.5.
    *Ninjet is non-inversive: With Ninjet applications, self-written classes don´t depend on the injection framework.
  *[[http://compositewpf.codeplex.com/|CodePlex "Prism"]].
    *[[http://msdn.microsoft.com/en-us/library/ff648612.aspx|Microsoft Developer Network, MSDN Library "Prism (Composite Application Guidance for WPF)"]].
  *[[http://unity.codeplex.com/|CodePlex "Unity Application Block (Unity)"]] - "patterns & practices - Unity".
    *[[http://msdn.microsoft.com/en-us/library/ff647202.aspx|Microsoft Developer Network "Unity Container"]].
    *The Code Project.
      *[[http://www.codeproject.com/Articles/988257/Dependency-Injection-using-Unity-container|The Code Project "Dependency Injection using Unity container"]].
      *[[http://www.codeproject.com/Articles/797132/Dependency-Injection-in-MVC-Using-Unity-IoC-Contai|The Code Project "Dependency Injection in MVC Using Unity IoC Container"]].
      *[[http://www.codeproject.com/Articles/33090/Using-the-Dependency-Injection-Pattern-and-Unity-C|The Code Project "Using the Dependency Injection Pattern and Unity Containers with a Service Locator"]].
=== Resources ===
  *The Code Project.
    *[[http://www.codeproject.com/Articles/690475/Prism-WPF-and-Unity-based-modular-application-step|The Code Project "Prism, WPF, and Unity based modular application step by step"]].
    *[[http://www.codeproject.com/Articles/223360/Inversion-of-Control-Dependency-Injection-with-Rep|The Code Project "Inversion of Control/Dependency Injection with Repository Pattern, Fluent Nhibernate, and LightCore Framework"]].
==== MVVM Framworks ====
  *[[http://www.mvvmlight.net/|MVVM Light Toolkit]], [[http://mvvmlight.codeplex.com/|CodePlex "MVVM Light Toolkit"]].
  *[[http://www.github.com/MvvmCross|GitHub "MvvmCross"]] - "The Mvvm Platform for Xamarin.iOS, Xamarin.Android, WindowsPhone, WindowsStore, WPF and Mac. Includes databinding support for Android XML, for iOS XIBs and for MonoTouch.Dialog".
    *[[http://www.codeproject.com/Articles/566191/MvvmCross-v-Writing-a-First-App|The Code Project "MvvmCross - v3 - Writing a First App"]].
==== SDKs for Third-Party Hardware ====
  *[[http://developer.olympus.com/cameras_login_developer_area_SDK.asp|Olympus Developer Area]].
  *[[http://www.didp.canon-europa.com/developer/didp/didp_main.nsf?opendatabase&login|Canon's Digital Imaging Developer Programme]].
==== Resources ====
  *[[http://www.stackoverflow.com/questions/807880/bcl-base-class-library-vs-fcl-framework-class-library|StackOverflow "BCL (Base Class Library) vs FCL (Framework Class Library)"]].
  *[[http://en.wikipedia.org/wiki/Standard_Libraries_%28CLI%29|EN.Wikipedia "Standard Libraries (CLI)"]].
===== Appropriate OpenDirectory Directory Pages =====
  *[[http://www.dmoz.org/Computers/Programming/Component_Frameworks/NET/|OpenDirectory "Top: Computers: Programming: Component Frameworks: NET]].
  *[[http://www.dmoz.org/World/Fran%C3%A7ais/Informatique/Programmation/Frameworks/DotNet/http://www.dmoz.org/World/Deutsch/Computer/Programmieren/Komponentenframeworks/NET/|OpenDirectory "Top: World: Deutsch: Computer: Programmieren: Komponentenframeworks: NET"]].
{{tag>"Microsoft .NET" "dot net" .net dotnet framework}}
<footnote_navi_en>
